id,msg
1,expected ID after expression
2,use of undeclared identifier ID
3,expected expression
4,expected ID
5,expected identifier or ID
6,expected ID in ID statement specifier
7,extraneous closing brace (ID)
8,expected ID at end of declaration
9,invalid operands to binary expression (ID and ID)
10,expression is not assignable
11,redefinition of ID
12,"too few arguments to function call, expected NUM, have NUM"
13,called object type ID is not a function or function pointer
14,expected statement
15,unexpected ID before ID
16,expected identifier
17,expected ID after ID
18,extraneous ID before ID
19,indirection requires pointer operand (ID invalid)
20,"subscripted value is not an array, pointer, or vector"
21,conflicting types for ID
22,void function ID should not return a value
23,expected ID after return statement
24,member reference type ID is a pointer; did you mean to use ID?
25,"too many arguments to function call, expected NUM, have NUM"
26,"extraneous ID after condition, expected a statement"
27,ID statement not in loop or switch statement
28,invalid digit ID in decimal constant
29,expected ID after struct
30,no member named ID in ID
31,ID file not found
32,expected ID after top level declarator
33,non-void function ID should return a value
34,definition of variable with array type needs an explicit size or an initializer
35,cannot take the address of an rvalue of type ID
36,expected parameter declarator
37,redefinition of ID with a different type: ID vs ID
38,invalid suffix ID on integer constant
39,member reference type ID (aka ID) is a pointer; did you mean to use ID?
40,non-ASCII characters are not allowed outside of literals and identifiers
41,array type ID is not assignable
42,"too few arguments to function call, single argument ID was not specified"
43,assigning to ID from incompatible type ID
44,function definition is not allowed here
45,invalid ID at end of declaration; did you mean ID?
46,member reference base type ID is not a structure or union
47,expected ID after break statement
48,"too many arguments to function call, expected single argument ID, have NUM arguments"
49,member reference type ID is not a pointer; did you mean to use ID?
50,array subscript is not an integer
51,member reference type ID (aka ID) is not a pointer; did you mean to use ID?
52,variable-sized object may not be initialized
53,"too few arguments to function call, at least argument ID must be specified"
54,argument type ID is incomplete
55,expected ID after continue statement
56,expected ID after do/while statement
57,unknown type name ID
58,a parameter list without types is only allowed in a function definition
59,cannot combine with previous ID declaration specifier
60,ID statement not in switch statement
61,subscript of pointer to function type ID
62,use of undeclared label ID
63,ID must return ID
64,passing ID to parameter of incompatible type ID
65,invalid preprocessing directive
66,parameter name omitted
67,unexpected type name ID: expected expression
68,expected ID at end of declaration list
69,type name requires a specifier or qualifier
70,must use ID tag to refer to type ID
71,array has incomplete element type ID
72,passing ID (aka ID) to parameter of incompatible type ID (aka ID); dereference with *
73,invalid suffix ID on floating constant
74,initializer element is not a compile-time constant
207,expected FILENAME or <FILENAME>
204,non-object type ID is not assignable
77,ID statement not in loop statement
206,initializing ID with an expression of incompatible type ID
206,assigning to ID from incompatible type ID; dereference with *
80,declaration of anonymous struct must be a definition
81,"assignment to cast is illegal, lvalue casts are not supported"
82,type-id cannot have a name
83,statement requires expression of scalar type (ID invalid)
84,expected function body after function declarator
85,array initializer must be an initializer list or wide string literal
86,assigning to ID (aka ID) from incompatible type ID
87,passing ID to parameter of incompatible type ID; dereference with *
88,redefinition of parameter ID
89,assigning to ID from incompatible type ID; take the address with &
90,cannot increment value of type ID
91,invalid application of ID to an incomplete type ID
92,indirection requires pointer operand (ID (aka ID) invalid)
93,duplicate member ID
94,ID is invalid
95,C does not support default arguments
96,invalid operands to binary expression (ID (aka ID) and ID)
97,cannot assign to variable ID with const-qualified type ID
98,variable has incomplete type ID
99,passing ID (aka ID) to parameter of incompatible type ID (aka ID); take the address with &
100,label at end of compound statement: expected statement
101,assigning to ID (aka ID) from incompatible type ID (aka ID); dereference with *
102,used type ID where arithmetic or pointer type is required
103,member reference type ID is not a pointer
104,invalid argument type ID to unary expression
105,returning ID (aka ID) from a function with incompatible result type ID (aka ID); dereference with *
106,assigning to ID (aka ID) from incompatible type ID (aka ID)
107,expected parentheses around type name in sizeof expression
108,passing ID to parameter of incompatible type ID; remove *
109,used type ID (aka ID) where arithmetic or pointer type is required
110,returning ID from a function with incompatible result type ID; take the address with &
111,size of array has non-integer type ID
112,returning ID from a function with incompatible result type ID
113,array initializer must be an initializer list or string literal
114,statement requires expression of scalar type (ID (aka ID) invalid)
115,"too many errors emitted, stopping now"
116,invalid storage class specifier in function declarator
117,macro name must be an identifier
118,expression not permitted as operand of fold expression
119,passing ID to parameter of incompatible type ID; take the address with &
120,expected member name or ID after declaration specifiers
121,field has incomplete type ID
122,cast to incomplete type ID
123,passing ID to parameter of incompatible type ID; remove &
124,ID and ID are not pointers to compatible types
125,assigning to ID from incompatible type ID; remove *
126,exponent has no digits
127,returning ID (aka ID) from a function with incompatible result type ID (aka ID)
128,function cannot return function type ID
129,flexible array member ID not allowed in otherwise empty struct
130,invalid application of ID to an incomplete type ID (aka ID)
131,member reference base type ID (aka ID) is not a structure or union
132,scalar initializer cannot be empty
133,duplicate case value ID
134,too many arguments provided to function-like macro invocation
135,operand of type ID where arithmetic or pointer type is required
136,returning ID from a function with incompatible result type ID (aka ID)
137,array initializer must be an initializer list
138,variable length array declaration not allowed at file scope
139,assigning to ID (aka ID) from incompatible type ID (aka ID); remove *
140,pack expansion does not contain any unexpanded parameter packs
141,assigning to ID from incompatible type ID (aka ID)
142,assigning to ID from incompatible type ID; remove &
143,parameter named ID is missing
144,returning ID (aka ID) from a function with incompatible result type ID
145,second parameter of ID (argument array) must be of type ID
146,passing ID (aka ID) to parameter of incompatible type ID (aka ID); remove *
147,redefinition of ID with a different type: ID vs ID (aka ID)
148,returning ID from a function with incompatible result type ID; dereference with *
149,initializing ID with an expression of incompatible type ID; take the address with &
150,variably modified type declaration not allowed at file scope
151,redefinition of ID as different kind of symbol
152,declaration of non-local variable in ID loop
153,redefinition of label ID
154,passing ID (aka ID) to parameter of incompatible type ID
155,invalid operands to binary expression (ID and ID (aka ID))
156,expected ID in do/while loop
157,returning ID (aka ID) from a function with incompatible result type ID (aka ID); remove *
158,assigning to ID (aka ID) from incompatible type ID (aka ID); take the address with &
159,assigning to ID (aka ID) from incompatible type ID; dereference with *
160,subscript of pointer to incomplete type ID
161,redefinition of ID with a different type: ID (aka ID) vs ID
162,illegal storage class on file-scoped variable
163,unterminated /* comment
164,incomplete definition of type ID
165,field ID declared as a function
166,assigning to ID (aka ID) from incompatible type ID (aka ID); remove &
167,variable length array declaration cannot have ID storage duration
168,initializing ID with an expression of incompatible type ID; dereference with *
169,initializing ID (aka ID) with an expression of incompatible type ID (aka ID)
170,character too large for enclosing character literal type
171,pointer cannot be cast to type ID
172,returning ID (aka ID) from a function with incompatible result type ID (aka ID); take the address with &
173,statement requires expression of integer type (ID invalid)
174,expression is not an integer constant expression
175,expected ID after goto statement
176,tentative definition has type ID that is never completed
177,field has incomplete type ID (aka ID)
178,illegal initializer (only variables can be initialized)
179,passing ID to parameter of incompatible type ID (aka ID); dereference with *
180,initializing ID with an expression of incompatible type ID (aka ID)
181,cannot decrement value of type ID
182,expected ID keyword before expression
183,passing ID (aka ID) to parameter of incompatible type ID; take the address with &
184,initializing wide char array with non-wide string literal
185,array is too large (NUM elements)
186,fields must have a constant size: ID extension will never be supported
187,integer literal is too large to be represented in any integer type
188,incomplete result type ID in function definition
189,variable has incomplete type ID (aka ID)
190,function definition declared ID
191,first parameter of ID (argument count) must be of type ID
192,expected ID after enum
193,expected external declaration
194,initializing ID (aka ID) with an expression of incompatible type ID
195,empty filename
196,declaration of anonymous union must be a definition
197,"brackets are not allowed here; to declare an array, place the brackets after the identifier"
198,passing ID to parameter of incompatible type ID (aka ID)
199,ID declared as an array with a negative size
200,initializing ID (aka ID) with an expression of incompatible type ID (aka ID); dereference with *
202,function cannot return array type ID
202,"expected ""FILENAME"" or <FILENAME>"
203,unterminated function-like macro invocation
204,too few arguments provided to function-like macro invocation
